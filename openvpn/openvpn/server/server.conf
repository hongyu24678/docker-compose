# 监听地址
local 0.0.0.0
# openvpn 端口
port 1194
# 指定协议
proto tcp
# proto udp
# 指定 vpn 虚拟子网的连接名 ( 连接创建后一般是 tun0 )
dev tun
# 指定服务端证书
ca pki/ca.crt
cert pki/server.crt
key pki/server.key
dh pki/dh.pem
# 指定防止 ddos 和泛红攻击的 key 文件 ( 服务端的参数必须是 0，客户端参数是 1 )
tls-auth pki/ta.key 0
# vpn 虚拟子网，用于客户端的连接，为客户端分配 ip 地址，转发数据包到内网
server 10.8.0.0 255.255.255.0
# 分配给客户端 ip 的记录文件，当 openvpn 重启后可以读取该文件避免重新分配其他 ip 给客户端
ifconfig-pool-persist ipp.txt
# 推送指定网段的路由到客户端, 要推送多个路由就写多条 push 配置即可，iptables 出口网卡也要配置多条或使用通配符 ( 默认网关是 openvpn 分配给客户端的网关 )
# push "route 192.168.10.0 255.255.255.0"
# push "route 192.168.20.0 255.255.255.0"
push "route 172.27.17.0 255.255.255.0"
# 推送默认网关到客户端 ( 会让客户端的所有流量都走 vpn )
# push "redirect-gateway def1 bypass-dhcp"
# 推送 dns 到客户端
# push "dhcp-option DNS 208.67.222.222"
# push "dhcp-option DNS 208.67.220.220"
# 与客户端的健康检查，10 秒发送一次心跳，120 秒视为超时
keepalive 10 120
# 加密算法
cipher AES-256-CBC
# 压缩传输
comp-lzo
# 最大客户端连接数
max-clients 1000
# openvpn 的运行用户
user openvpn
group openvpn
# 持久化选项
persist-key
persist-tun
# status openvpn-status.log
# 日志输出等级
verb 4
# 将日志输出到文件 ( 如果不指定默认会输出到系统日志 )
# log-append /var/log/openvpn.log
# 服务器重启后可以自动重连
explicit-exit-notify 1
# 每一小时对客户端的认证进行重新验证 ( 旧版客户端如果配置了禁止缓存认证信息则会频繁弹窗认证 )
reneg-sec 3600
# 脚本安全级别 3，启用脚本执行 ( 允许将密码以换将变量方式传递到认证脚本 )
script-security 3
# 指定认证脚本
auth-user-pass-verify /etc/openvpn/scripts/login.sh via-env
# 忽略客户端证书 ( 有用户密码认证就不需要使用证书认证了，如果任然需要证书认证将其注释即可 )
verify-client-cert none
# 使用客户端提供的 username 和 password 作为用户验证脚本中的变量 ( 变量名为 username 和 password )
username-as-common-name
